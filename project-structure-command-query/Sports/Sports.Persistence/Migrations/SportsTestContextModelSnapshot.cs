// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sports.Persistence;

namespace Sports.Persistence.Migrations
{
    [DbContext(typeof(SportsTestContext))]
    partial class SportsTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sports.Persistence.Domain.Athlete", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("Sports.Persistence.Domain.TestAggregate.AthleteTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AthleteId");

                    b.Property<decimal>("Distance");

                    b.Property<int>("FitnessRating");

                    b.Property<Guid>("TestId");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("AthleteTests");
                });

            modelBuilder.Entity("Sports.Persistence.Domain.TestAggregate.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Sports.Persistence.Domain.Athlete", b =>
                {
                    b.HasOne("Sports.Persistence.Domain.TestAggregate.AthleteTest")
                        .WithOne("Athlete")
                        .HasForeignKey("Sports.Persistence.Domain.Athlete", "Id")
                        .HasPrincipalKey("Sports.Persistence.Domain.TestAggregate.AthleteTest", "AthleteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sports.Persistence.Domain.TestAggregate.AthleteTest", b =>
                {
                    b.HasOne("Sports.Persistence.Domain.TestAggregate.Test")
                        .WithMany("Athletes")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
